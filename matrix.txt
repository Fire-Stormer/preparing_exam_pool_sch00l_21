#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main() {
	int n;
	scanf_s("%d", &n);
	int** pointer = malloc(n * sizeof(int*));
	int* value = malloc(n * n * sizeof(int));

	for (int i = 0; i < n; i++) {
		pointer[i] = value + n * i;
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			scanf_s("%d", &pointer[i][j]);
		}
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			printf("%d ", pointer[i][j]);
		}
		printf("\n");
	}
	printf("\n");

	int** pointer_trans = malloc(n * sizeof(int*));
	int* value_trans = malloc(n * n * sizeof(int));

	for (int i = 0; i < n; i++) {
		pointer_trans[i] = value_trans + n * i;
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			pointer_trans[i][j] = pointer[j][i];
		}
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			printf("%d ", pointer_trans[i][j]);
		}
		printf("\n");
	}
	printf("\n");

	int** p = malloc(n * sizeof(int*));
	int* v = malloc(n * n * sizeof(int));

	for (int i = 0; i < n; i++) {
		p[i] = v + n * i;
	}

	int k = 0, l = 0, m = 0;
	for (m = 0; m < n; m++) {
		for (k = 0; k < n; k++) {
			p[m][k] = 0;
			for (l = 0; l < n; l++) {
				p[m][k] += pointer_trans[m][l] * pointer[l][k];
			}
		}
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			printf("%d ", p[i][j]);
		}
		printf("\n");
	}

	free(value);
	free(pointer);
	free(value_trans);
	free(pointer_trans);
	free(v);
	free(p);
	return 0;
}